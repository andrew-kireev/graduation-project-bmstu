// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.14.0
// source: admin_profiles.proto

package __

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AdminProfilesClient is the client API for AdminProfiles service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AdminProfilesClient interface {
	CreateAdminProfile(ctx context.Context, in *CreateAdminProfileIn, opts ...grpc.CallOption) (*CreateAdminProfileOut, error)
	LoginAdminProfile(ctx context.Context, in *LoginAdminProfileIn, opts ...grpc.CallOption) (*LoginAdminProfileInOut, error)
	LogoutAdminProfile(ctx context.Context, in *LoginAdminProfileIn, opts ...grpc.CallOption) (*LoginAdminProfileInOut, error)
}

type adminProfilesClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminProfilesClient(cc grpc.ClientConnInterface) AdminProfilesClient {
	return &adminProfilesClient{cc}
}

func (c *adminProfilesClient) CreateAdminProfile(ctx context.Context, in *CreateAdminProfileIn, opts ...grpc.CallOption) (*CreateAdminProfileOut, error) {
	out := new(CreateAdminProfileOut)
	err := c.cc.Invoke(ctx, "/admin_profiles.AdminProfiles/CreateAdminProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminProfilesClient) LoginAdminProfile(ctx context.Context, in *LoginAdminProfileIn, opts ...grpc.CallOption) (*LoginAdminProfileInOut, error) {
	out := new(LoginAdminProfileInOut)
	err := c.cc.Invoke(ctx, "/admin_profiles.AdminProfiles/LoginAdminProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminProfilesClient) LogoutAdminProfile(ctx context.Context, in *LoginAdminProfileIn, opts ...grpc.CallOption) (*LoginAdminProfileInOut, error) {
	out := new(LoginAdminProfileInOut)
	err := c.cc.Invoke(ctx, "/admin_profiles.AdminProfiles/LogoutAdminProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminProfilesServer is the server API for AdminProfiles service.
// All implementations must embed UnimplementedAdminProfilesServer
// for forward compatibility
type AdminProfilesServer interface {
	CreateAdminProfile(context.Context, *CreateAdminProfileIn) (*CreateAdminProfileOut, error)
	LoginAdminProfile(context.Context, *LoginAdminProfileIn) (*LoginAdminProfileInOut, error)
	LogoutAdminProfile(context.Context, *LoginAdminProfileIn) (*LoginAdminProfileInOut, error)
	mustEmbedUnimplementedAdminProfilesServer()
}

// UnimplementedAdminProfilesServer must be embedded to have forward compatible implementations.
type UnimplementedAdminProfilesServer struct {
}

func (UnimplementedAdminProfilesServer) CreateAdminProfile(context.Context, *CreateAdminProfileIn) (*CreateAdminProfileOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAdminProfile not implemented")
}
func (UnimplementedAdminProfilesServer) LoginAdminProfile(context.Context, *LoginAdminProfileIn) (*LoginAdminProfileInOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginAdminProfile not implemented")
}
func (UnimplementedAdminProfilesServer) LogoutAdminProfile(context.Context, *LoginAdminProfileIn) (*LoginAdminProfileInOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogoutAdminProfile not implemented")
}
func (UnimplementedAdminProfilesServer) mustEmbedUnimplementedAdminProfilesServer() {}

// UnsafeAdminProfilesServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AdminProfilesServer will
// result in compilation errors.
type UnsafeAdminProfilesServer interface {
	mustEmbedUnimplementedAdminProfilesServer()
}

func RegisterAdminProfilesServer(s grpc.ServiceRegistrar, srv AdminProfilesServer) {
	s.RegisterService(&AdminProfiles_ServiceDesc, srv)
}

func _AdminProfiles_CreateAdminProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAdminProfileIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminProfilesServer).CreateAdminProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_profiles.AdminProfiles/CreateAdminProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminProfilesServer).CreateAdminProfile(ctx, req.(*CreateAdminProfileIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminProfiles_LoginAdminProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginAdminProfileIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminProfilesServer).LoginAdminProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_profiles.AdminProfiles/LoginAdminProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminProfilesServer).LoginAdminProfile(ctx, req.(*LoginAdminProfileIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminProfiles_LogoutAdminProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginAdminProfileIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminProfilesServer).LogoutAdminProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin_profiles.AdminProfiles/LogoutAdminProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminProfilesServer).LogoutAdminProfile(ctx, req.(*LoginAdminProfileIn))
	}
	return interceptor(ctx, in, info, handler)
}

// AdminProfiles_ServiceDesc is the grpc.ServiceDesc for AdminProfiles service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AdminProfiles_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "admin_profiles.AdminProfiles",
	HandlerType: (*AdminProfilesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAdminProfile",
			Handler:    _AdminProfiles_CreateAdminProfile_Handler,
		},
		{
			MethodName: "LoginAdminProfile",
			Handler:    _AdminProfiles_LoginAdminProfile_Handler,
		},
		{
			MethodName: "LogoutAdminProfile",
			Handler:    _AdminProfiles_LogoutAdminProfile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin_profiles.proto",
}
